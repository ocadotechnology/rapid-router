name: Publish Python Package
on:
  pull_request:
  # workflow_run:
  #   workflows: ['CI']
  #   branches: [master]
  #   types:
  #     - completed
jobs:
  publish-pypi-packages:
    name: Publish PyPi Packages
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.6.7'
          architecture: 'x64'
      - name: Install pip requirements
        run: |
          pip install pipenv
          pipenv install --dev --system
          pip install -U git+https://github.com/ocadotechnology/codeforlife-portal.git#egg=codeforlife-portal #TODO: Remove as part of #688
          sudo apt-get install gettext
      - name:
          Run Crowdin
          # pip install crowdin-cli-py
        run: |
          mkdir -p game/locale
          cd game && django-admin makemessages -l en_GB --no-wrap && cd -
          cd game && django-admin makemessages -l en_GB --no-wrap -d djangojs --ignore "static/game/js/foundation/*" && cd - # some files from foundation use '_' for their own purpose
      - name: crowdin action
        # crowdin-cli-py upload sources
        # ./.crowdin-get-translations
        uses: crowdin/github-action@1.0.13
        with:
          upload_sources: true
          dryrun_action: true
          project_id: ${{ secrets.CROWDIN_PROJECT_ID }}
          download_translations: true
          token: ${{ secrets.CROWDIN_API_KEY }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - name: Release rapid-router
      #   uses: relekang/python-semantic-release@master
      #   with:
      #     github_token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
      #     pypi_token: ${{ secrets.PYPI_TOKEN }}
      # - name: Trigger build on Semaphore
      #   run: curl -d POST -v https://semaphoreci.com/api/v1/projects/${SEMAPHORE_PROJECT_ID}/master/build?auth_token=${SEMAPHORE_API_AUTH}
      #   env:
      #     SEMAPHORE_PROJECT_ID: ${{ secrets.SEMAPHORE_PROJECT_ID }}
      #     SEMAPHORE_API_AUTH: ${{ secrets.SEMAPHORE_API_AUTH }}
